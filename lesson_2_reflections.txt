What happens when you initialize a repository? Why do you need to do it?

A: Git begins tracking meta data for your first commit.  

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is phantom -- it's the elements in the actual working directory (folder on a harddrive) that will be added to a commit. 
A staging area allows only what is needed for the next commit to be commited.

How can you use the staging area to make sure you have one commit per logical change?

A: Prior to each commit, I'll stage only one changed file (with on locigal change). 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: Situations where branching would be helpful in keeping history organized are...
	Experimental coat being seperated from the main code
	New feature development seperated until feature functional
	Variations of program for testing kept seperately from main application

How do the diagrams help you visualize the branch structure?

A: Diagrams provide an easier to understand mapping of the structure which can be used to trace back branches and commits to their origin

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A: The result is a master branch that includes the commits / code from the merged branch.  The diagram provides paths back for a clear pictures of what's in the new master branch and when items have been added.